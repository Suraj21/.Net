<UserControl x:Class="TaskManagementApp.Views.CurrentTasksView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:TaskManagementApp.ViewModel"
             xmlns:local="clr-namespace:TaskManagementApp.Views"
             Background="#ffffff"
             mc:Ignorable="d">
    <UserControl.Resources>
        <SolidColorBrush x:Key="deepBlueColor" Color="#006699" />
        <SolidColorBrush x:Key="borderColor" Color="#99ddff" />

        <CollectionViewSource x:Key="statusList" Source="{Binding StatusList}" />
        <SolidColorBrush x:Key="GotFocusColor" Color="Green" />
        <SolidColorBrush x:Key="LostFocusColor" Color="Transparent" />

        <Style TargetType="{x:Type Button}" x:Key="newButton">
            <Setter Property="Background" Value="White" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#006699" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                BorderBrush="{StaticResource deepBlueColor}" 
                                BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource deepBlueColor}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label" x:Key="styleLabel">
            <Setter Property="Foreground" Value="#006699" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="10,0,0,0" />
        </Style>

        <!--<ControlTemplate x:Key="TextBoxBasecontrolTemplate" TargetType="{x:Type TextBox}">
            <Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="5" />
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                    <Setter Property="MinWidth" Value="100"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>-->
        <Style TargetType="{x:Type TextBox}" x:Key="txtBoxStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                x:Name="Bd"
                                BorderBrush="White"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style TargetType="{x:Type TextBox}" >
            <Setter Property="CornerRadius" Value="3"/>
        </Style>-->
        
        <Style TargetType="{x:Type DataGridCell}" x:Key="dgCellStyle">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="dgHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF262626"/>
                </Trigger>

                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="#FF383838"/>
                </Trigger>

                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#FF333333"/>
                </Trigger>

                <EventTrigger RoutedEvent="DataGrid.GotFocus">
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource GotFocusColor}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="DataGrid.LostFocus">
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource LostFocusColor}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- Flat ComboBox -->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="{StaticResource deepBlueColor}"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                                            ClickMode="Press" Focusable="False"
                                            IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                                    IsReadOnly="{TemplateBinding IsReadOnly}"
                                    Visibility="Hidden" Background="Transparent"
                                    HorizontalAlignment="Left" VerticalAlignment="Center"
                                    Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                                                Focusable="False" AllowsTransparency="True"
                                                IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                                PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                                                        MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                                        MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                                                        CornerRadius="0" BorderThickness="1,1,1,1" 
                                                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="120"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Grid.RowSpan="2" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Label Foreground="{StaticResource deepBlueColor}" FontSize="50" FontWeight="DemiBold" Content="Currently openend Tasks" />
        </StackPanel>
        <Border CornerRadius="5" Grid.Row="2" BorderBrush="{StaticResource borderColor}" BorderThickness="1" Margin="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition  Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right"  Margin="10">
                    <Button x:Name="btnGetTasks" Width="120" Height="50" Content="Get Tasks" Style="{StaticResource newButton}"/>
                </StackPanel>
                <StackPanel VerticalAlignment="Center" Grid.Row="0"  Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,10,10,10">
                    <Label Content="Status" Style="{StaticResource styleLabel}"/>
                    <ComboBox x:Name="cmbStatusComboBox"
                              ItemsSource="{Binding StatusList}"
                              Width="120"
                              Height="25"
                              SelectedIndex="0"
                              Margin="10"/>
                    <Label  Content="Start Date" Style="{StaticResource styleLabel}"/>
                    <DatePicker Name="MonthlyCalendar" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Top"
                                SelectedDate="{Binding StartDate}"
                                Width="130"
                                Margin="10,10,0,0">
                    </DatePicker>
                    <Label  Content="Due Date" Style="{StaticResource styleLabel}"/>
                    <DatePicker Name="DueDateCalendar" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Top"
                                SelectedDate="{Binding DueDate}"
                                Width="130"
                                Margin="10,10,0,0">
                    </DatePicker>
                    <Label  Content="Date Added" Style="{StaticResource styleLabel}"/>
                    <DatePicker Name="DateAddedCalendar" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Top"
                                SelectedDate="{Binding DateAdded}"
                                Width="130"
                                Margin="10,10,0,0">
                    </DatePicker>
                </StackPanel>
            </Grid>
        </Border>
        <Border Grid.Row="3" Margin="10" CornerRadius="5" BorderBrush="{StaticResource borderColor}" BorderThickness="1">
            <StackPanel>
                <DataGrid x:Name="dgCurrentTasks"
                      HorizontalContentAlignment="Center" 
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      AreRowDetailsFrozen="True"
                      CanUserAddRows="False"
                      Height="360"
                      IsReadOnly="True"
                      ItemsSource="{Binding TasksList,Mode=TwoWay}"
                      IsSynchronizedWithCurrentItem="False"
                      Margin="10"
                      AutoGenerateColumns="False">
                <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" 
                                            Binding="{Binding Id, Mode=TwoWay}"
                                            MinWidth="30" 
                                            MaxWidth="30"
                                            CellStyle="{StaticResource dgCellStyle}"
                                            HeaderStyle="{StaticResource dgHeaderStyle}"/>
                    
                        <DataGridTextColumn Header="Task"
                                            Binding="{Binding TaskName, Mode=TwoWay}"
                                            MinWidth="280"
                                            MaxWidth="490" />
                    
                        <DataGridTextColumn Header="Description"
                                            Binding="{Binding Description, Mode=TwoWay}" 
                                            MinWidth="350"
                                            Width="905"
                                            MaxWidth="910"/>
                        <DataGridTextColumn Header="Status"
                                            Binding="{Binding Status, Mode=TwoWay}" 
                                            MinWidth="90"
                                            MaxWidth="120"/>
                        <!--<DataGridComboBoxColumn Header="Status" 
                                            x:Name="Status" 
                                            SelectedValueBinding="{Binding Status, Mode=TwoWay}"
                                            ItemsSource="{Binding Source={StaticResource statusList}}"
                                                MinWidth="90"
                                            MaxWidth="120"/>-->
                        <DataGridTextColumn Header="StartDate"
                                            Binding="{Binding StartDate}" 
                                            MaxWidth="130"
                                            MinWidth="90"/>
                        <DataGridTextColumn Header="DueDate"
                                            Binding="{Binding DueDate}" 
                                            MaxWidth="130" 
                                            MinWidth="90"/>
                        <DataGridTextColumn Header="DateAdded"
                                            Binding="{Binding DateAdded}" 
                                            MaxWidth="130"
                                            MinWidth="90"/>
                        <!--<DataGridTemplateColumn Header="StartDate" MaxWidth="130" MinWidth="90">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding StartDate}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <DatePicker SelectedDate="{Binding StartDate}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="DueDate" MaxWidth="130" MinWidth="90">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DueDate}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <DatePicker  Text="{Binding DueDate}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="DateAdded" MaxWidth="130" MinWidth="90">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DateAdded}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <DatePicker  Text="{Binding DateAdded}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>-->
                    </DataGrid.Columns>
            </DataGrid>
                <GroupBox VerticalAlignment="Bottom" 
                          Foreground="{StaticResource deepBlueColor}" 
                          x:Name="TaskGroupBox"
                          BorderBrush="{StaticResource borderColor}" 
                          Margin="10"
                          FontWeight="Bold"
                          Header="Modify Details">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" 
                               Grid.Column="0"
                               Content="Task Name"
                               Style="{StaticResource styleLabel}"/>
                        <TextBox Grid.Row="0" 
                                 Grid.Column="1"
                                 Margin="10" 
                                 VerticalContentAlignment="Center"
                                 x:Name="txtTaskName"
                                 HorizontalAlignment="Stretch"
                                 BorderBrush="#006699"
                                 Text="{Binding TaskName}"
                                 Height="25">
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="2"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>
                        <Label Margin="10" Grid.Row="1" Grid.Column="0" Content="Task Description" Style="{StaticResource styleLabel}"/>
                        <TextBox Grid.Row="1" 
                                 Margin="10"
                                 Grid.Column="1" 
                                 VerticalContentAlignment="Top"
                                 x:Name="txtTaskDescription" 
                                 HorizontalAlignment="Stretch" 
                                 Height="60"
                                 AcceptsReturn="True"
                                 VerticalScrollBarVisibility="Auto"
                                 Text="{Binding TaskDescription}"
                                 TextWrapping="Wrap"
                                 BorderBrush="#006699">
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>
                        <StackPanel Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"  Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Stretch">
                            <Label Margin="10" Content="Status" Style="{StaticResource styleLabel}"/>
                            <ComboBox Margin="90,10,0,10" 
                                      Width="120"
                                      Height="25"
                                      x:Name="cmbStatus"
                                      SelectedItem="{Binding Status}" 
                                      Style="{StaticResource ComboBoxFlatStyle}"
                                      SelectedIndex="0" 
                                      ItemsSource="{Binding StatusList}" />
                            <Label Margin="40,10,10,10" Content="Start Date" Style="{StaticResource styleLabel}"/>
                            <DatePicker HorizontalAlignment="Left" 
                                        VerticalAlignment="Center"
                                        Width="130"
                                        SelectedDate="{Binding StartDateToAdd}"
                                        Margin="10,10,0,10">
                            </DatePicker>
                            <Label Margin="40,10,10,10" Content="Due Date" Style="{StaticResource styleLabel}"/>
                            <DatePicker HorizontalAlignment="Left" 
                                        VerticalAlignment="Center"
                                        Width="130"
                                        SelectedDate="{Binding DueDateToAdd}"
                                        Margin="10,10,0,10">
                            </DatePicker>
                        </StackPanel>
                        <StackPanel Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                            <Button x:Name="btnAdd" Command="{Binding AddTaskCommand}" Width="120" Height="50" Content="Add" Margin="10" Style="{StaticResource newButton}"/>
                            <Button x:Name="btnUppdate" Width="120" Height="50" Content="Update" Margin="10" Style="{StaticResource newButton}"/>
                            <Button x:Name="btnDelete" Width="120" Height="50" Content="Delete" Margin="10" Style="{StaticResource newButton}"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>
            </StackPanel>
        </Border>
        
    </Grid>
</UserControl>
